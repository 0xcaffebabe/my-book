{"content":"# Mybatis\n\n## 框架\n\n>框架（Framework）是整个或部分系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法;另一种 定义认为，框架是可被应用开发者定制的应用骨架。前者是从应用方面而后者是从目的方面给出的定义。  简而言之，框架其实就是某种应用的半成品，就是一组组件，供你选用完成你自己的系统。简单说就是使用别 人搭好的舞台，你来做表演。而且，框架一般是成熟的，不断升级的软件。 \n\n## Mybatis\n\n- 持久层框架\n- 动态sql\n- ORM\n\nMapper 注册中心 -> 执行器 -> StatementHadnler -> ResultsetHandler\n\n## 搭建\n\n- 创建mapper接口\n\n```java\npublic interface UserDao {\n\n    List<User> findAll();\n}\n```\n\n- 创建总配置文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <environments default=\"development\">\n        <environment id=\"development\">\n            <!--事务类型-->\n            <transactionManager type=\"JDBC\"/>\n\n            <!--连接池-->\n            <dataSource type=\"POOLED\">\n                <property name=\"driver\" value=\"com.mysql.cj.jdbc.Driver\"/>\n                <property name=\"url\" value=\"jdbc:mysql:///mybatis\"/>\n                <property name=\"username\" value=\"root\"/>\n                <property name=\"password\" value=\"123\"/>\n            </dataSource>\n        </environment>\n    </environments>\n    <mappers>\n        <mapper resource=\"mappers/user.xml\"/>\n    </mappers>\n</configuration>\n```\n\n- 创建映射配置文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"wang.ismy.mybatis.dao.UserDao\">\n\n    <select id=\"findAll\" resultType=\"wang.ismy.mybatis.entity.User\">\n    SELECT * FROM user\n  </select>\n</mapper>\n```\n\n## 使用\n\n```java\n    @Test\n    public void findAll() throws IOException {\n\n        SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(\n                Resources.getResourceAsStream(\"config.xml\"));\n        SqlSession sqlSession = factory.openSession();\n\n        List<User> list = sqlSession.getMapper(UserDao.class).findAll();\n        assertEquals(6,list.size());\n    }\n```\n\n### 注解\n\n```java\npublic interface UserDao {\n\n    @Select(\"SELECT * FROM user\")\n    List<User> findAll();\n}\n```\n\n```xml\n<!--如果使用注解的话，则指定class属性-->\n    <mappers>\n        <mapper class=\"wang.ismy.mybatis.dao.UserDao\"/>\n    </mappers>\n```\n\n## 分析\n\n![自定义Mybatis分析](/assets/自定义Mybatis分析.png)\n\n\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}