{"content":"# mybatis 缓存\n\n## 延迟加载\n\n>就是在需要用到数据时才进行加载，不需要用到数据时就不加载数据。延迟加载也称懒加载. \n\n- 开启延迟加载\n\n```xml\n<settings>\n    <setting name=\"logImpl\" value=\"STDOUT_LOGGING\" />\n    <!--延迟加载相关-->\n    <setting name=\"lazyLoadingEnabled\" value=\"true\"/>\n    <setting name=\"aggressiveLazyLoading\" value=\"false\"/>\n</settings>\n```\n\n- 修改连接\n\n```xml\n<resultMap id=\"userMap\" type=\"user\">\n    <id column=\"id\" property=\"id\"/>\n    <result column=\"username\" property=\"username\"/>\n    <result property=\"address\" column=\"address\"/>\n    <result property=\"birthday\" column=\"birthday\"/>\n    <result property=\"sex\" column=\"sex\"/>\n    <collection property=\"account\" ofType=\"Account\" select=\"wang.ismy.mybatis.dao.AccountDao.findById\" column=\"id\">\n        <id column=\"account_id\" property=\"id\"/>\n        <result column=\"uid\" property=\"uid\"/>\n        <result column=\"money\" property=\"money\"/>\n    </collection>\n</resultMap>\n```\n\n*使用的动态代理实现的延迟加载*\n\n## 缓存\n\n![](https://img-blog.csdn.net/20150726164148424?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n![批注 2020-05-18 103307](/assets/批注%202020-05-18%20103307.png)\n\n### 一级缓存\n\n>一级缓存是 SqlSession 范围的缓存，当调用 SqlSession 的修改，添加，删除，commit()，close()等方法时，就会清空一级缓存。 \n\n命中原则：\n\n- statementId相同\n- 查询参数相同（hash的方式）\n- 分页参数\n- sql语句\n- 同一环境（environment属性）\n\n生命周期：\n\n缓存销毁：\n- session close\n- commit\n- clearCache主动清除\n\n设计理念：\n\n- 不过期\n- 不更新\n- 不限制\n\n### 二级缓存\n\n>二级缓存是 mapper 映射级别的缓存，多个 SqlSession 去操作同一个 Mapper 映射的 sql 语句，多个 SqlSession 可以共用二级缓存，二级缓存是跨 SqlSession 的。 \n\n**二级缓存中存放的是数据而不是对象**\n\n#### 开启\n\n- 第一步：在 SqlMapConfig.xml 文件开启二级缓存\n\n```xml\n<!--默认为true，可以省略-->\n<setting name=\"cacheEnabled\" value=\"true\"/>\n```\n- 第二步：配置相关的 Mapper 映射文件 \n\n```xml\n<cache/>\n```\n- 第三步：配置 statement 上面的 useCache 属性 \n\n```xml\n<select id=\"findAll\" resultMap=\"userMap\" useCache=\"true\">\n    SELECT * FROM user\n</select>\n```\n\n#### 命中原则\n\n- 同一 session factory\n- statement id 相同\n- 参数相同\n- environment 环境相同\n- sql session close 或 commit\n\n#### 生命周期\n\n创建:\n\n- sql session close 或 commit\n\n销毁：\n\n- sql session update\n\n### 缓存清除策略\n\n![批注 2020-05-18 105408](/assets/批注%202020-05-18%20105408.png)\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}