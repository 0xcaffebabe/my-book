{"content":"# Spring 概览\n\n## 关键策略\n\n- 基于POJO和最小侵入性编程\n- 通过依赖和面向接口实现松耦合\n- 基于切面和惯例进行声明式编程\n- 通过切面和模板减少样板代码\n\n## 简化JAVA开发\n\n- 依赖注入\n- 应用切面\n- 各种模板\n\n## 容纳你的Bean\n\n### 常用上下文：\n\n- **AnnotationConfigApplicationContext**\n- AnnotationConfigWebApplicationContext\n- **ClassPathXmlApplicationContext**\n- **FileSystemXmlApplicationContext**\n- XmlWebApplicationContext\n\n*ApplicationContext立即加载*\n*BeanFactory延迟加载*\n\n### bean的生命周期\n\n![202081181522](/assets/202081181522.jpg)\n\n### Spring 模块\n\n![202081181547](/assets/202081181547.png)\n\n## Spring框架的核心\n\nDI 和 AOP\n\n# 解耦\n\n- 反射\n- 工厂模式解耦\n- 控制反转-Inversion Of Control\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}