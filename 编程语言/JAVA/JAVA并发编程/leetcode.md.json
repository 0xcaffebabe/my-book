{"content":"# 多线程-leetcode\n\n## 按序打印\n\n- 解法1\n\nCountDownLatch\n\n```java\nclass Foo {\n    private CountDownLatch latch2 = new CountDownLatch(1);\n    private CountDownLatch latch3 = new CountDownLatch(1);\n    public Foo() {\n        \n    }\n\n    public void first(Runnable printFirst) throws InterruptedException {\n        // printFirst.run() outputs \"first\". Do not change or remove this line.\n        printFirst.run();\n        latch2.countDown();\n    }\n\n    public void second(Runnable printSecond) throws InterruptedException {\n        latch2.await();\n        // printSecond.run() outputs \"second\". Do not change or remove this line.\n        printSecond.run();\n        latch3.countDown();\n    }\n\n    public void third(Runnable printThird) throws InterruptedException {\n        latch3.await();\n        // printThird.run() outputs \"third\". Do not change or remove this line.\n        printThird.run();\n    }\n}\n```\n\n## 交替打印FooBar\n\n<https://leetcode-cn.com/problems/print-foobar-alternately/>\n\n- 自旋\n\n```java\nclass FooBar {\n    private int n;\n    private volatile boolean f = false;\n    public FooBar(int n) {\n        this.n = n;\n    }\n\n    public void foo(Runnable printFoo) throws InterruptedException {\n        \n        for (int i = 0; i < n; i++) {\n        \t// printFoo.run() outputs \"foo\". Do not change or remove this line.\n                while(f){Thread.yield();}\n                printFoo.run();\n                f=true;\n        }\n    }\n\n    public void bar(Runnable printBar) throws InterruptedException {\n        \n        for (int i = 0; i < n; i++) {\n            // printBar.run() outputs \"bar\". Do not change or remove this line.\n                while(!f){Thread.yield();}\n                printBar.run();\n                f=false;\n        }\n    }\n}\n```\n\n## 打印零与奇偶数\n\n<https://leetcode-cn.com/problems/print-zero-even-odd/submissions/>\n\n```java\nclass ZeroEvenOdd {\n    private final int n;\n    private volatile int i =1;\n    private volatile int f= 0;\n    public ZeroEvenOdd(int n) {\n        this.n = n;\n    }\n\n    // printNumber.accept(x) outputs \"x\", where x is an integer.\n    public void zero(IntConsumer printNumber) throws InterruptedException {\n        while(true){\n            while(f != 0){\n                Thread.yield();\n                if (i>n){\n                    return;\n                }\n            }\n            printNumber.accept(0);\n            if (i%2==1){\n                f=1;\n            }else{\n                f=2;\n            }\n        }\n        \n    }\n\n    public void odd(IntConsumer printNumber) throws InterruptedException {\n        while(true){\n            while(f != 1){\n                Thread.yield();\n                if (i>n){\n                    return;\n                }\n            }\n            printNumber.accept(i++);\n            f=0;\n        }\n        \n    }\n\n    public void even(IntConsumer printNumber) throws InterruptedException {\n        while(true){\n            while(f != 2){\n                Thread.yield();\n                if (i>n){\n                    return;\n                }\n            }\n            printNumber.accept(i++);\n            f=0;\n        }\n        \n    }\n}\n```\n\n## H20生成\n\n<https://leetcode-cn.com/problems/building-h2o/submissions/>\n\n```java\nclass H2O {\n\n    private CyclicBarrier barrier;\n    volatile boolean f = false;\n    public H2O() {\n        barrier = new CyclicBarrier(2,new Runnable(){\n            public void run(){setF(false);}\n        });\n    }\n\n    private void setF(boolean val){\n        f = val;\n    }\n\n    public void hydrogen(Runnable releaseHydrogen) throws InterruptedException {\n\t\t\n        // releaseHydrogen.run() outputs \"H\". Do not change or remove this line.\n        while(!f){Thread.yield();}\n        releaseHydrogen.run();\n        try {\n            barrier.await();\n        }catch(Exception e){\n            throw new RuntimeException(e);\n        }\n    }\n\n    public void oxygen(Runnable releaseOxygen) throws InterruptedException {\n        while(f){Thread.yield();}\n        // releaseOxygen.run() outputs \"O\". Do not change or remove this line.\n\t\treleaseOxygen.run();\n        f= true;\n    }\n}\n```","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}