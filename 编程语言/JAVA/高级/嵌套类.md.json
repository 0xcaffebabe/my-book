{"content":"# 嵌套类\n\n- 静态嵌套类，类前面有static修饰符\n- 非静态嵌套类，又称内部类\n  - 普通内部类\n  - 局部内部类\n  - 匿名内部类\n\n```java\npublic class Main {\n\n    // 静态嵌套类\n    static class Inner1{ }\n    /* 包内静态内部类的好处：\n    1. 作用域不会扩散到包外\n    2. 可使用 外部类.内部类 方式直接访问\n    3. 内部类可以直接访问所有静态属性及方法\n    */\n\n    // 普通内部类\n    class Inner2{}\n    \n    public void f(){\n        // 局部内部类\n        class Inner3{}\n        \n        // 匿名内部类\n        new Object(){};\n    }\n    \n}\n```\n\n## 使用理由\n\n- 细粒度访问控制\n- 避免过多类定义\n\n## 匿名内部类\n\n- 没有正式类名\n- 没有构造函数\n- 可以继承、改写、增加父类的方法\n- 不能定义静态成员（静态常量除外）\n- 可以访问外部类的成员\n\n## 局部内部类\n\n- 编译后名称：外部类名+$+序号+内部类名\n- 可以继承其他类，或者实现其他接口\n- 非静态的类，不能包含静态成员(变量和方法)，除了常量\n- 可以访问外部包围类的成员\n- 如果定义在静态方法中，只能访问包围类的静态成员\n- 局部内部类不能是一个接口，即接口不能定义在代码块中\n\n## 普通内部类\n\n- 编译后名称：外部类名+$+内部类名\n- 可以继承其他类，或者实现其他接口\n- 可以用private/package private(不写)/protected/public控制外界访问\n- 非静态的类，不能包含静态变量/方法，除了常量\n- 和外部包围类的实例相关，一个普通内部类实例肯定是在一个外部包围类的实例中，且可以访问外部包围类的所有成员\n- 在第三方类中，需要先创建外部包围类实例，才能创建普通内部\n类的实例，不允许单独的普通内部类对象存在！！！\n\n## 静态嵌套类\n\n- 需要加修饰符static\n- 可以定义静态成员和非静态成员\n- 不能直接访问包围类的非静态成员，可直接访问包围类的静态成员\n  - 可通过包围类的对象进行访问非静态成员\n- 外界可以通过静态嵌套类名访问其静态成员，通过对象访问其非静态成员\n- 外界需要通过包围类才可以访问到静态嵌套类，并创建其对象，不需要外部包围类的实例\n\n## 对比\n\n![批注 2019-11-25 131139](/assets/批注%202019-11-25%20131139.png)\n\n![批注 2019-11-25 131222](/assets/批注%202019-11-25%20131222.png)\n\n**变量遮蔽**\n\n- 以离得近作为优先原则\n- 优先级高的变量会遮蔽优先级低的变量\n- 外部包围类.this.变量名，可以访问到外部包围类的成员变量\n- 静态嵌套类不能访问非静态变量\n- Java 7及以前，匿名内部类和局部内部类只能访问外部包围类的final成员变量\n- Java 8及以后，匿名内部类和局部内部类可访问外部包围类的final成员变量和\n事实意义上的final变量(effectively final, 一个变量定值后，再也没有改过值)\n\n## 应用\n\n- 匿名内部类\n  - 无需类名，用过即焚，使用广泛\n  - 该类的对象只要一个，且方法只有一个，代码短\n    - Android中常用匿名内部类\n- 局部内部类\n  - 定义在方法体内，只能在当前方法内使用，代码短\n  - 使用较少\n  - 介于匿名内部类和普通内部类之间\n    - 迭代器\n- 普通内部类\n  - 广泛使用在具有母子结构的类，内部类对象和外围类保持联系\n  - 如Map和Map.Entry，ZipFile和ZipFile.ZipEntryIterator等\n- 静态嵌套类\n  - 和外围类没有太多的联系\n  - 节省普通内部类和外围类的联系开销\n  - 使得外围类对象更容易被垃圾回收器回收\n\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}