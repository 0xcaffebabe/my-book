{"content":"# JAVA运行管理\n\n## OS管理\n\n- 进程级别的管理(黑盒)\n- CPU/内存/IO等具体性能监控\n\n### top命令\n\n### vmstat命令\n\n## JVM管理\n\n- 线程/程序级别的管理(白盒)\n- 查看虚拟机运行时各项信息\n- –跟踪程序的执行过程，查看程序运行时信息\n- 限制程序对资源的使用\n- 将内存导出为文件进行具体分析\n\n## JMX\n\nJMX是一个为应用程序植入管理功能的框架\n\n用户可以在任何Java应用程序中使用这些代理和服务实现管理\n\n![](https://upload-images.jianshu.io/upload_images/5001962-1d62a1d30a912f44.png?imageMogr2/auto-orient/strip|imageView2/2/w/600/format/webp)\n\n### MBean\n\n代表着一个被管理的对象，类似JavaBean\n\n对外暴露一个管理接口，即一些可读/写的属性，一些可操作的方法\n\n### Agent\n\n外界通过Agent可以访问到MBean\n\n### 优点 \n\n- JMX不需要较大成本，即可管理应用程序\n- JMX提供一套标准化方法，来管理基于Java的应用程序/系统/网络\n- JMX被用来作为JVM的外在管理方式\n- JMX提供了一个可扩展、动态的管理架构\n- JMX充分利用已有的Java技术\n- JMX容易和现有的管理技术进行集成\n\n## JAVA运行安全\n\n### 启用\n\n```java\nSystem.setSecurityManager(new SecurityManager());\n```\n\n```shell\njava –Djava.security.manager –Djava.security.policy=My.policy HelloWorld\n```\n\n### 安全策略文件\n\n建立代码来源和访问权限的关系\n\n```\n permission java.io.FilePermission “/tmp/*”, “read, write”\n```\n\n```java\nFilePermission p = new FilePermission(\"/tmp/*\",\"read,write\");\n```\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}