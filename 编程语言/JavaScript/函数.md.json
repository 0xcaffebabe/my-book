{"content":"# 函数\n\n## 定义\n\n```js\n// 命名函数\nfunction fn(){}\n// 匿名函数\nvar fn = function(){}\n// 函数对象 里面参数都必须是字符串格式\nvar fn = new Function('参数1','参数2'..., '函数体')\n```\n\n## 调用\n\n```js\n// 普通调用\nfn()\n// 对象的方法\nobj.fn()\n// 构造方法\nnew Object()\n// 事件绑定\nbtn.onclick = function(){}\n// 定时器函数\nsetInterval(function(){}, 1000);\n// 立即执行函数\n(function(){})();\n```\n\n## this\n\n![2020228104446](/assets/2020228104446.png)\n\n### 改变this指向\n\n#### call()\n\n```js\nfunction fn(arg1){\n    console.log(this) // string cxk\n}\n// 修改fn函数里面的this指向'cxk'\nfn.call('cxk','arg1')\n```\n\n#### apply()\n\n```js\nfunction fn(a, b) {\n    console.log(a, b)\n    console.log(this) // obj\n}\nvar obj = { name: 'cxk' }\n// 参数使用数组传递\nfn.apply(obj, [1, 2])\n```\n\ncall 和 apply 传递的参数不一样,call传递参数使用逗号隔开,apply使用数组传递\n\n#### bind()\n\n```js\n// 返回一个包装函数\nvar f = fn.bind(obj, 1, 2)\nf()// 调用这个函数，this指向obj\n```\n\n## 严格模式\n\nJavaScript 除了提供正常模式外，还提供了严格模式（strict mode）。ES5 的严格模式是采用具有限制性 JavaScript变体的一种方式，即在严格的条件下运行 JS 代码\n\n- 消除了 Javascript 语法的一些不合理、不严谨之处，减少了一些怪异行为\n- 消除代码运行的一些不安全之处，保证代码运行的安全\n- 提高编译器效率，增加运行速度\n- 禁用了在 ECMAScript 的未来版本中可能会定义的一些语法\n\n### 开启严格模式\n\n```js\n// 为整个脚本开启严格模式\n\"use strict\";\n...\n// 在函数中开启严格模式\nfunction fn(){\n    \"use strict\";\n}\n```\n\n### 严格模式中的变化\n\n```js\n// 变量未声明不能使用\nnum = 10 \n// 变量不能删除\ndelete num\n// 严格模式下全局作用域中函数中的 this 是 undefined\nfunction fn() { console.log(this); }\n// 严格模式下,如果 构造函数不加new调用, this 指向的是undefined 如果给他赋值则 会报错\nObject();\n//严格模式下，定时器 this 还是指向 window\nsetTimeout(function() {\n  console.log(this); \n}, 2000);\n// 严格模式下不能有重名的函数\nfunction a(){}  \nfunction a(){} \n// 不允许在非函数的代码块内声明函数\nif (condition){\n    function(){}\n}\n```\n\n更多变化参考:<https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode>\n\n## 高阶函数\n\n- 当参数的类型或者返回值类型是一个函数，则称之为高阶函数\n\n## 闭包\n\n闭包（closure）指有权访问另一个函数作用域中变量的函数\n\n作用：延伸变量的作用范围\n\n```js\nfunction fn(){\n    var num=1;\n    return function(){\n        console.log(num);\n    }\n}\nfn()()\n``` \n\n## 拷贝\n\n- 浅拷贝\n\n```js\nvar obj = {name:'cxk'}\nvar o ={}\nObject.assign(o,obj)\n```\n\n- 深拷贝\n\n```js\nfunction deepCopy(newObj,oldObj){\n    for (var k in oldObj){\n        if (oldObj[k] instanceof Array){\n            newObj[k]=[]\n            deepCopy(newObj[k],oldObj[k])\n        }else if(oldObj[k] instanceof Object){\n            newObj[k]={}\n            deepCopy(newObj[k],oldObj[k])\n        }else{\n            newObj[k]=oldObj[k]\n        }\n    }\n}\n```\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}