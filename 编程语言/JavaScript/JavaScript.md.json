{"content":"# 与html结合方式\n\n- 内部js\n- 外部js\n\n# 注释\n\n# 数据类型\n\n## 原始数据类型\n\n- number\n- string\n- null\n- undefined\n\n## 引用数据类型\n\n# 变量\n\n```javascript\nvar a = 5;\n```\n\n- typeof\n\n# 运算符\n\n- 一元运算符\n\n  ```javascript\n  ++ -- + -\n  ```\n\n- 算术运算符\n\n  ```javascript\n  + - * / % ...\n  ```\n\n- 赋值运算符\n\n  ```javascript\n  = += -+....\n  ```\n\n- 比较运算符\n\n  ```javascript\n  > < >= <= == ===\n  ```\n\n- 逻辑运算符\n\n  ```javascript\n  && || !\n  ```\n\n  - 其他对象转boolean\n\n    - number：0或NaN为假，其他为真\n    - string：除了空字符串(\"\")，其他都是true\n    - null&undefined:都是false\n    - 对象：所有对象都为true\n\n- 三元运算符\n\n# JS特殊语法\n\n# 流程控制语句\n\n- if..else...\n- switch\n- while\n- do...while\n- for\n\n# 基本对象\n\n## Function\n\n```javascript\nfunction f(x){\n    ...\n}\n\nvar f = function(){\n    ...\n}\n```\n\n## Array\n\n- 创建\n\n```javascript\nnew Array(元素列表);\nnew Array(长度);\n[1,2,3,4];\n```\n\n- 特点\n\n  - 元素类型可变\n  - 长度可变\n\n- 方法\n\n  - join：拼接成字符串\n  - push\n\n## Date\n\n- [常用方法](https://www.w3school.com.cn/jsref/jsref_obj_date.asp)\n\n## Math\n\n- [常用方法](https://www.w3school.com.cn/jsref/jsref_obj_math.asp)\n\n## Gloal\n\n- encodeURI\n- decodeURI\n- encodeURIComponent:编码范围更广\n\n- parseInt\n\n- isNaN\n\n- eval\n\n# 立即执行函数\n\n```javascript\n(\n    function(){\n        //...\n    }\n)()\n```\n\n## window\n\n## 方法\n\n与弹出框有关的方法：\n\n- alert() 显示带有一段消息和一个确认按钮的警告框。\n- confirm() 显示带有一段消息以及确认按钮和取消按钮的对话框。\n\n  - 如果用户点击确定按钮，则方法返回true\n  - 如果用户点击取消按钮，则方法返回false\n\n- prompt() 显示可提示用户输入的对话框。\n\n  - 返回值：获取用户输入的值\n\n与打开关闭有关的方法：\n\n- close() 关闭浏览器窗口。\n\n  - 谁调用我 ，我关谁\n\n- open() 打开一个新的浏览器窗口\n\n  - 返回新的Window对象\n\n# 动画函数封装\n\n> 核心原理：通过定时器 setInterval() 不断移动盒子位置。\n\n- 利用 JS 是一门动态语言，可以很方便的给当前对象添加属性来将定时器添加到对象中\n\n## 缓动效果\n\n- 核心算法： (目标值 - 现在的位置) / 10 做为每次移动的距离步长\n\n## 动函数添加回调函数\n\n回调函数原理：函数可以作为一个参数。将这个函数作为参数传到另一个函数里面，当那个函数执行完之后，再执行传进去的这个函数，这个过程就叫做回调\n\n## 完整代码\n\n```javascript\nfunction animate(obj,target,callback){\n    clearInterval(obj.timer);\n    obj.timer = setInterval(() => {\n        var step = Math.ceil((target - obj.offsetLeft)/10);\n        if (obj.offsetLeft >= target){\n            clearInterval(obj.timer);\n            callback();\n        }\n        obj.style.left = obj.offsetLeft + step + 'px';\n    }, 15);\n}\n```\n\n# JSON\n\n## 语法\n\n- 数据在名称/值对中：json数据是由键值对构成的\n- 数据由逗号分隔：多个键值对由逗号分隔\n- 花括号保存对象：使用{}定义json 格式\n- 方括号保存数组：[]\n\n## 获取数据\n\n- json对象.键名\n- json对象[\"键名\"]\n- 数组对象[索引]\n\n## 转换\n\n```javascript\nJSON.stringify({username:'name'}) // to text\nJSON.parse(str) // to obj\n```\n\n## 后端解析\n\n- 常见的解析器：Jsonlib，Gson，fastjson，jackson\n\n# 移动端常用插件\n\n- Swiper 插件：轮播图插件\n- lsuperslide：常用特效插件\n- l iscroll：平滑滚动\n- zy.media.js：移动端视频插件\n\n# 移动端常用框架\n\n- bootstrap\n\n# 本地存储\n\n## 特性\n\n1、数据存储在用户浏览器中\n\n2、设置、读取方便、甚至页面刷新不丢失数据\n\n3、容量较大，sessionStorage约5M、localStorage约20M\n\n4、只能存储字符串，可以将对象JSON.stringify() 编码后\n\n## sessionStorage\n\n1、生命周期为关闭浏览器窗口\n\n2、在同一个窗口(页面)下数据可以共享\n\n3、以键值对的形式存储使用\n\n```js\n// 存储\nsessionStorage.setItem(key, value);\n// 获取\nsessionStorage.getItem(key);\n// 删除\nsessionStorage.removeItem(key);\n// 清除所有\nsessionStorage.clear();\n```\n\n## localStorage\n\n- 生命周期永久，除非手动删除\n- 多窗口共享\n\n使用方式同sessionStorage\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}