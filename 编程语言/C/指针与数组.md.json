{"content":"# 指针与地址\n\n```c\np = &c; // p为指向c的指针\ny = *p; // 现在y的值的c的值\n```\n\n# 指针与函数参数\n\n```c\nvoid swap(int *x,int *y){\n    int tmp = *x;\n    *x = *y;\n    *y = tmp;\n}\n```\n\n# 指针与数组\n\n数组本质也是一个指针\n\n但是指针是一个变量，数组名不是一个变量\n\n# 地址算术运算\n\n- 相同类型指针之间的赋值运算\n- 同整数间的加减法运算\n- 指向相同数组的两个指针减法或比较运算\n- 将指针赋值为0\n\n# 字符串与指针\n```c\nvoid reverse(char *s,int n){\n    if (n<0){\n        return;\n    }\n    putchar(*(s+n));\n    reverse(s,--n);\n}\n```\n\n# 指针数组以及指向指针的指针\n\n```c\nchar *sa[20];\n```\n\n```c\nint main(){\n    int x;\n    int *xp = &x;\n    int **xpp = &xp;\n\n    **xpp=15;\n    printf(\"%d\",x);\n}\n```\n\n# 多维数组\n```c\nint a[i][j];\n```\n\n# 指针数组的初始化\n\n# 指针与多维数组\n\n```c\nchar *s[]={\"123\",\"321\",\"1111\"};\n```\n\n# 命令行参数\n\n```c\nint main(int argc,char *s[]){return 0;}\n```\n\n# 指向函数的指针\n\n![批注 2019-07-06 151608](/assets/批注%202019-07-06%20151608.png)\n\n# 复杂声明\n\n\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}