{"content":">对象关系映射（Object Relational Mapping，简称ORM）是通过使用描述对象和数据库之间映射的元数据，将面向对象语言程序中的对象自动持久化到关系数据库中\n\n- JDBC操作的繁琐\n\n# Hibernate\n\n- 依赖\n\n```xml\n<dependency>\n            <groupId>org.hibernate</groupId>\n            <artifactId>hibernate-core</artifactId>\n            <version>6.0.0.Alpha2</version>\n        </dependency>\n```\n\n- 配置\n\n```xml\n\n<?xml version='1.0' encoding='UTF-8'?>\n<!-- hibernate.cfg.xml -->\n<!DOCTYPE hibernate-configuration PUBLIC\n        \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"\n        \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">\n<hibernate-configuration>\n    <session-factory>\n        <property name=\"connection.url\">jdbc:mysql:///hibernate</property>\n        <property name=\"connection.driver_class\">com.mysql.cj.jdbc.Driver</property>\n        <property name=\"connection.username\">root</property>\n        <property name=\"connection.password\">123</property>\n\n        <property name=\"hibernate.hbm2ddl.auto\">update</property>\n        <property name=\"dialect\">org.hibernate.dialect.MySQL57Dialect</property>\n        <property name=\"show_sql\">true</property>\n\n        <mapping class=\"wang.ismy.orm.entity.Book\"/>\n    </session-factory>\n</hibernate-configuration>\n```\n\n- 实体类\n\n```java\n@Entity\n@Table(name = \"tb_book\")\npublic class Book {\n\n    @Id\n    @Column(name = \"bid\")\n    @GeneratedValue(strategy = GenerationType.TABLE)\n    private Integer id;\n\n    @Column(name = \"bname\")\n    private String name;\n\n    @Column(name = \"bauthor\")\n    private String author;\n}\n```\n\n- 使用\n\n```java\n        Configuration cfg = new Configuration().configure();\n\n        SessionFactory sessionFactory = cfg.buildSessionFactory();\n\n        Session session = sessionFactory.openSession();\n        Transaction tx = session.beginTransaction();\n\n        Book book = new Book();\n        book.setName(\"cxk 篮球入门指南\");\n        book.setAuthor(\"cxk\");\n        session.save(book);\n\n        tx.commit();\n\n        session.close();\n        sessionFactory.close();\n```\n\n- 查询\n\n```java\n        Session session = sessionFactory.openSession();\n        Book book = new Book();\n        book.setId(2);\n        session.get(Book.class, 2);\n```\n\n- 删除\n\n```java\n        Book book = new Book();\n        book.setId(2);\n        session.delete(book);\n```\n\n## 运行原理\n\n![](https://img-blog.csdn.net/20170921205322084?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzY3NDgyNzg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n# Mybatis\n\n## 运行原理\n\n![](https://img-blog.csdn.net/20150427151555111?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvaml1cWl5dWxpYW5n/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}