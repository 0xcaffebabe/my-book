{"content":"# 基本概念\n\n- 顺序索引:基于值得顺序排序\n- 散列索引：基于将值平均分布到散列桶\n\n## 评价维度\n\n- 访问类型\n- 访问时间\n- 插入时间\n- 删除时间\n- 空间开销\n\n**搜索码**：用于在文件中查找记录的属性或属性集\n\n# 顺序索引\n\n- 稠密索引\n\n  每个搜索码都有一个索引项\n\n- 稀疏索引\n\n  只为某些搜索码建立索引\n\n![](https://upload-images.jianshu.io/upload_images/6161179-992f138e3d4b5457.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n\n## 多级索引\n\n![enter image description here](https://img-blog.csdn.net/20180318141334176?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0dleHJpb3I=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n## 索引的更新\n\n- 插入数据更新\n- 删除数据更新\n\n## 辅助索引\n\n![enter image description here](https://img-blog.csdn.net/20180318141348435?watermark/2/text/Ly9ibG9nLmNzZG4ubmV0L0dleHJpb3I=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n## 多码上的索引\n\n复合搜索码\n\n# B+树索引\n\n![enter image description here](https://img-blog.csdn.net/20160705112611539?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQv/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center)\n\n## B+树的结构\n\n![](https://upload-images.jianshu.io/upload_images/6161179-2cfccd836176b890.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/920/format/webp)\n\n![](https://upload-images.jianshu.io/upload_images/6161179-77fe73282921fb2e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp)\n\n## B+树的查询\n\n## B+树更新\n\n- 插入\n- 删除\n\n## 不唯一的搜索码\n\n两条或者多条记录在索引属性上拥有相同的值\n\n解决方法：\n\n- 创建包含原始搜索码和其他额外属性的符合搜索码\n- 在B+树节点上使用列表来存储\n\n## B+树更新的复杂性\n\n## 辅助索引和记录重定位\n\n## 字符串上的索引\n\n**前缀压缩**\n\n## B+树索引的批量加载\n\n## B树索引文件\n\n# 多码访问\n\n## 多码索引\n\n搜索码（k1,k2k,k3...）\n\n## 覆盖索引\n\n存储附加属性\n\n# 静态散列\n\n## 散列函数\n\n- 分布均匀\n- 分布随机\n\n## 桶溢出处理\n\n![](https://upload-images.jianshu.io/upload_images/6161179-bdfd18b032e37082.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/838/format/webp)\n\n- 桶不足\n- 偏斜\n\n## 散列索引\n\n# 动态散列\n\n> 散列函数可动态改变\n\n## 数据结构\n\n![enter image description here](https://ask.qcloudimg.com/http-save/yehe-1008345/wjz044kc5l.jpeg?imageView2/2/w/1620)\n\n- 查询\n- 更新\n\n## 静态列表VS动态散列\n\n- 动态散列：性能不随文件增长降低。空间开销小。并且增加了一个中间层，带来微小的性能损失。\n\n# 顺序索引和散列的比较\n\n# 位图索引\n\n> 位的一个简单数组\n\n## 位图操作的高效实现\n\n## 位图与B+树\n\n# SQL中的索引定义\n\n```sql\nCREATE INDEX <索引名> ON <关系名> (属性列表)\n```\n\n```sql\nCREATE INDEX index_kkk ON user(username) # 在user表上创建username索引\n```\n\n\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}