{"content":"# 关系数据库设计\n\n## 好的关系设计的特点\n\n## 设计选择\n\n- 更大的模式 比如department模式与student模式进行合并，得到两个模式的连接结果dept_stu 问题：\n\n  - 数据冗余\n  - 有些情况无法表示\n\n- 更小的模式： 如何发现一个模式需要分解成n个更小的模式？ **函数依赖** 定义这样的一条规则：如果存在模式（dept_name,budget）,则dept_name可以作为主码，那么这就叫函数依赖 记作：x → y **有损分解**：分解过后无法表达一些重要的信息。 **无损分解**：上面取反\n\n## 异常\n\n不符合范式的关系\n\n- 冗余数据\n- 修改异常\n- 删除异常\n- 插入异常\n\n## 原子域与第一范式\n\n一个域是原子的，如果该域的元素被认为是不可分的单元，我们称一个关系模式R属于第一范式。 简单来说：所有关系模式数据库都符合第一范式\n\n## 第二范式\n\n每个非主属性完全函数依赖于键码\n\n## 使用函数依赖进行分解\n\n### 码和函数依赖\n\n一个关系满足需求定义的现实世界约束，称为关系的合法实例\n\n- 给定R的一个实例，我们说这个实例满足函数依赖x → y 的条件是：对于实例中的所有元组t1，t2 ，若t1[x] = t1[x] ，则t1[y] = t2[y]\n- 如果R中的每个合法实例都满足函数依赖，则我们说该函数依赖在R上成立 我们以两种方式使用函数依赖：\n- 判定关系的实例是否满足给定函数依赖集F\n- 说明合法关系集上的约束 **平凡函数依赖**：如果y ⊆ x，则称x→y的函数依赖是平凡的 我们用F<sup>+</sup>表达F集合的闭包，也就是能够从给定F集合推导出来的函数依赖集合\n\n### BC范式\n\n属于BC范式的条件是： 对于F<sup>+</sup>中所有形如a→b的函数依赖(a ⊆ R,b⊆R ),下面至少有一项成立：\n- a → b是平凡的函数依赖（b ⊆ a）\n- a是模式R的一个超码 分解不属于BCNF的一般规则： 设R为一个不属于BCNF的一个模式，则存在至少一个非平凡的函数依赖a→b，其中a不是R的超码，我们用两个模式取代R：\n- （a ∪ b）\n- （R - （b - a ）） 进行迭代直到得到一个BCNF模式集合\n\n### BCNF和保持依赖\n\n由于设计使得函数依赖的强制实施在计算很困难，因此称这个设计不是保持依赖的\n\n### 第三范式\n\n属于第三范式的条件，下面至少一项成立：\n\n- a → b是一个平凡的函数依赖\n- a 是R的一个超码\n- b - a的每个属性都包含于R的一个候选码中\n\n## 函数依赖理论\n\n### 函数依赖集的闭包\n\n逻辑蕴含： A -> B,B-> h 那么 A -> H被逻辑蕴含\n\n#### Amstrong 公理\n\n- 自反律\n- 增补律\n- 传递律\n- 合并律\n- 分解律\n- 伪传递律\n\n### 属性集的闭包\n\n如果 a → B，我们称属性B被a函数确定\n\n### 正则覆盖\n\n### 无损分解\n\nR1,R2是R的分解，如果用R1,R2替代R没有信息损失，则该分解是无损分解\n\n### 保持依赖\n\n## 分解算法\n\n### BCNF分解\n\n### 3NF分解\n\n### BCNF和3NF的比较\n\n应用函数依赖进行数据库设计的目标：\n\n- BCNF\n- 无损\n- 保持依赖\n\n## 使用多值依赖的分解\n\n### 多值依赖\n\n函数依赖有时成为**相等依赖** 多值依赖成为**元组产生依赖** 设R为关系模式，让a ⊆ R 且 b ⊆ R 多值依赖 a -> -> b在R上成立的条件是：\n\n### 4NF分解\n\n## 更多的范式\n\n## 数据库设计过程\n\n### ER模型和规范化\n\n### 属性和联系的命名\n\n### 为性能去规范化\n\n## 时态数据建模\n\n时态数据时具有关联时间段的数据 **快照**快照是指一个特定时间点上该数据的值\n\n## 一些坑\n\n- 没有唯一键约束\n\n业务上具有唯一特性的字段，即使是多个字段的组合，也必须建成唯一索引\n\n如果没有唯一索引，很容易会被插入重复数据\n\n- 执行delete没带查询条件\n\n执行删除操作时，要开启事务，同时要先查询核对影响的行数和数据准确性，再执行删除操作 ；执行删除操作后再次核实，如果情况不对立即回滚\n\n- 表结构修改没有兼容老数据\n\n比如增加了一个非null字段\n\n- 时效性要求极高的场景查了备库\n\n备库存放的数据可能不是最新的数据\n\n- 悬停时间较长的事务被kill\n- 表新增了供查询的字段，却没建索引，导致慢查询","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}