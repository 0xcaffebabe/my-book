{"content":"# 网络编程\n\n## CS编程模型\n\n![](http://img.wandouip.com/crawler/article/2019213/bbf3339d70054afcf2734d37807bd5a1)\n\n## 网络\n\n![](https://img-blog.csdn.net/20131002151841984?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhbmdoYW9keDA4Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n## 全球IP因特网\n\n![](https://img-blog.csdn.net/20131002160153031?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvemhhbmdoYW9keDA4Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast)\n\n### IP地址\n\n>IP地址（Internet Protocol Address）是指互联网协议地址，又译为网际协议地址。IP地址是IP协议提供的一种统一的地址格式，它为互联网上的每一个网络和每一台主机分配一个逻辑地址，以此来屏蔽物理地址的差异。\n\n### 因特网域名\n\n### 因特网连接\n\n## 套接字接口\n\n```c\n/*通用的socket地址结构 (用于connect, bind, 和accept) */ \nstruct sockaddr { \n    unsigned short sa_family;    /* 协议家族 */ \n    char sa_data[14];    /* 地址数据 */ \n}; \n/* 因特网形式的socket地址结构 */ \nstruct sockaddr_in { \n    unsigned short sin_family; /* 地址家族，一般都是AF_INET */ \n    unsigned short sin_port; /* 网络字节顺序（大端表示法）的端口号 */ \n    struct in_addr sin_addr; /* 网络字节顺序（大端表示法）的IP地址 */ \n    unsigned char sin_zero[8]; /* 对sizeof(struct sockaddr)的填补 */ \n};\n```\n\n## socket 函数\n\n```c\n#include <sys/types.h>\n#include <sys/socket.h>\n\nint socket(int domain,int type,int protocol); // 使用此函数创建一个套接字描述符\nint connect(int clientfd,const struct socketaddr *addr,socklen_t addrlen);　// 建立与服务端的连接\nint bind(int sockfd,const struct sockaddr *addr,socklen_t addrlen);　// 服务器用来绑定fd与网络地址\nint listen(int sockfd,int backlog); // 服务器将socketfd转换为一个监听socketfd 从而接受客户端的连接请求\nint accept(int listenfd,struct sockaddr *addr,int *addrlen); // 返回已连接描述符\n```\n\n为什么需要区分监听描述符与已连接描述符　答案是为了并发　服务器端可以通过多进程或者多线程的方式处理多个已连接描述符　从而对多个用户提供服务\n\n## 主机和服务的转换\n\n```c\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netdb.h>\n\nint getaddrinfo(const char *host,const char *service,\n    const struct addrinfo *hints,\n    struct addrinfo **result); // 将主机名端口号等信息转换为套接字地址结构\nvoid freeaddrinfo(struct addrinfo *result);\nconst char *gai_strerror(int errorcode);\n\nint getnameinfo(const struct sockaddr *sa,socklen_t salen,\n    char *host,size_ hostlen,\n    char *service,size_t servlen,int flags);\n```\n\n# WEB服务器\n\n## WEB内容\n\n![批注 2019-07-20 091829](/assets/批注%202019-07-20%20091829.png)\n\n\n\n\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}