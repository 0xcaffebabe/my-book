{"content":"[toc]\n# Intent 与 Intent过滤器\n> Intent 是一个消息传递对象，您可以使用它从其他应用组件请求操作\n其基本用例主要包括以下三个：\n- 启动 Activity\n- 启动服务\n- 传递广播\n## Intent类型\n- 显式 Intent：按名称（完全限定类名）指定要启动的组件\n- 隐式 Intent ：不会指定特定的组件，而是声明要执行的常规操作，从而允许其他应用中的组件来处理它\n\n**从 Android 5.0（API 级别 21）开始，如果使用隐式 Intent 调用 bindService()，系统会引发异常**\n##　构建 Intent\nIntent 中包含的主要信息如下：\n- 组件名称\n- 操作\n- 数据\n- 类别\n- Extra\n- 标志\n### 显式 Intent 示例\n```java\n// 在 Activity 中执行, 所以 'this' 就是当前的上下文\n//  fileUrl 是一个URL, 类似 \"http://www.example.com/image.png\"\nIntent downloadIntent = new Intent(this, DownloadService.class);\ndownloadIntent.setData(Uri.parse(fileUrl));\nstartService(downloadIntent);\n```\n### 隐式 Intent 示例\n```java\n// 创建一条文本消息\nIntent sendIntent = new Intent();\nsendIntent.setAction(Intent.ACTION_SEND);\nsendIntent.putExtra(Intent.EXTRA_TEXT, textMessage);\nsendIntent.setType(\"text/plain\");\n\n// 确定这个Intent可以匹配到Activity\nif (sendIntent.resolveActivity(getPackageManager()) != null) {\n    startActivity(sendIntent);\n}\n```\n设置选择框标题：\n```java\nIntent chooser = Intent.createChooser(sendIntent, title);\n```\n### 接收隐式 Intent\n以下是一个使用包含 Intent 过滤器的 Activity 声明，当数据类型为文本时，系统将接收 ACTION_SEND Intent ：\n```xml\n<activity android:name=\"ShareActivity\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.SEND\"/>\n        <category android:name=\"android.intent.category.DEFAULT\"/>\n        <data android:mimeType=\"text/plain\"/>\n    </intent-filter>\n</activity>\n```\n```\n限制对组件的访问\n---\n如果必须确保只有您自己的应用才能启动您的某一组件，请针对该组件将 exported 属性设置为 \"false\"\n```\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}