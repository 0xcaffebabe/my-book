{"content":"# 对象-关系行为模式\n\n## 工作单元\n\n维护受影响的对象列表，并协调对象的修改以及解决并发问题\n\n```java\ninterface WorkUnit {\n    new(Object),Dirty(Object),Clean(Object)\n}\n```\n\n工作单元会将被修改的对象变化记录下来，存储到数据库\n\n工作单元解决的基本问题是记录各种操作过的对象\n\n- 调用者注册：修改之后调用者手动提交来保存对象\n- 对象注册：将注册方法置于对象中\n- 工作单元控制器：查询时返回一个拷贝对象，提交时比较拷贝对象与原有的对象，进行有选择的更新\n\n工作单元可以保证更新顺序，并且按照相同的数据更新表可以很少地减少死锁\n\n## 标识映射\n\n通过给每个对象指定一个标识，避免重复加载，当需要对象时，通过映射来找到对象\n\n无论需要一个什么对象，先检查标识映射，看需要的对象是否在其中\n\n- 键的选择：数据库主键\n- 显式的标识映射可以利用编译时检查的优点\n- 标识映射与会话相绑定\n\n### 使用\n\n- 管理对象\n- 做缓存\n\n## 延迟加载\n\n一个不包含所需要的所有数据但知道如何获取这些数据的对象\n\n- 延迟初始化：每次获取都判断是否为空，如果空就去获取数据\n- 虚代理：一个获取数据的代理对象，类可以把它当做真实的对象\n- 值保持器：包装某个对象的对象，但是缺点是不如虚代理，类必须知道这个保持器的存在\n- 重影：首次加载只加载ID，当需要某个域时，则会加载入全部的域\n\n使用的最佳时机：需要额外的调用，并且当主对象被使用时，额外加载的数据没被使用的时候\n\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}