{"content":"# 链路追踪\n\n>Spring Cloud Sleuth为服务之间调用提供链路追踪。通过Sleuth可以很清楚的了解到一个服务请求经过了哪些服务，每个服务处理花费了多长\n\n## Sleuth\n\n![](http://favorites.ren/assets/images/2018/springcloud/tracing2.png)\n\n## ZipKin\n\n> Zipkin 是一个开放源代码分布式的跟踪系统，由Twitter公司开源，它致力于收集服务的定时数据，以解决微服务架构中的延迟问题，包括数据的收集、存储、查找和展现\n\n### 搭建服务端\n\n> spring boot2.x之后不推荐执行搭建服务端，而是使用编译好的版本\n\n```shell\ncurl -sSL https://zipkin.io/quickstart.sh | bash -s\n```\n\n完成之后会得到一个jar包\n\n```shell\njava -jar zipkin.jar \n```\n\n访问http://127.0.0.1:9411\n\n![批注 2019-07-25 164613](/assets/批注%202019-07-25%20164613.png)\n\n### 客户端添加zipkin支持\n\n```xml\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-zipkin</artifactId>\n</dependency>\n```\n```properties\nspring.zipkin.base-url=http://localhost:9411\nspring.sleuth.sampler.rate=1\n```\n\n## 原理\n\n当请求发送到分布式系统的入口端点时，只需要服务跟踪框架为该请求创建一个唯的跟踪标识，这个标识将随着服务调用在各个服务间传递，这样就可以根据这个标识得到各个服务间的调用，从而组合成一条完整的调用链","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}