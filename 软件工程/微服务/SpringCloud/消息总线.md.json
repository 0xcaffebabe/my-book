{"content":"# 消息总线\n\n>微服务架构中，通常会使用轻量级的消息代理来构建一个共用的消息主题来连接各个微服务实例，它广播的消息会被所有在注册中心的微服务实例监听和消费，也称消息总线\n\n![2020317105912](/assets/2020317105912.jpg)\n\n## 使用\n\n- 添加依赖（服务端与客户端\n\n```xml\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-bus-amqp</artifactId>\n</dependency>\n```\n\n- 配置服务端\n\n```yml\n\n  rabbitmq:\n    host: 127.0.0.1\n    port: 5672\n    username: guest\n    password: guest\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: bus-refresh\n  endpoint:\n    bus-refresh:\n      enabled: true\n```\n\n- 配置客户端\n\n```properties\n# 记得rabbitmq服务器信息\n# 刷新时，关闭安全验证\nmanagement.endpoints.web.exposure.include=bus-refresh\n# 开启消息跟踪\nspring.cloud.bus.trace.enabled=true\n```\n\n当配置发生更新时，post调用配置中心 <http://config_server:8003/actuator/bus-refresh>\n\n新配置就会传播到所有客户端\n\n## 局部刷新\n\n在调用webhook的时候，可以指定参数来指定更新要传播到哪些微服务\n\n## 总线事件\n\n访问<http://127.0.0.1:8003/actuator/trace>可以追踪","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}