{"content":"# 消息驱动\n\n>SpringCloud Stream消息驱动可以简化开发人员对消息中间件的使用复杂度，让系统开发人员更多尽力专注与核心业务逻辑的开发\n\n![批注 2020-03-17 133449](/assets/批注%202020-03-17%20133449.png)\n\n## 使用\n\n- 依赖\n\n```xml\n<deendency>\n\t<groupId>org.springframework.cloud</groupId>\n\t<artifactId>spring-cloud-stream</artifactId>\n</dependency>\n<!-- 整合rabbitmq -->\n<dependency>\n\t<groupId>org.springframework.cloud</groupId>\n\t<artifactId>spring-cloud-starter-stream-rabbit</artifactId>\n</dependency>\n```\n\n- 配置\n\n```properties\nspring.rabbitmq.host=192.168.182.130\nspring.rabbitmq.username=my\nspring.rabbitmq.password=123\n```\n\n```java\n@EnableBinding(MessageService.class)\n```\n\n- 生产者\n\n```java\npublic interface MessageService {\n\n    @Output(\"msg1\")\n    SubscribableChannel send();\n}\n```\n\n发送消息\n\n```java\nmessageService.send().send(MessageBuilder.withPayload(\"cxk\"+ UUID.randomUUID()).build());\n```\n\n- 消费者\n\n```java\npublic interface MessageService {\n\n    @Input(\"msg1\")\n    SubscribableChannel receive();\n}\n```\n\n接收消息\n\n```java\n@StreamListener(\"msg1\")\npublic void listen(String msg){\n    System.out.println(\"消费者接收到消息:\"+msg);\n}\n```\n\n- 消费者组\n\n```properties\n# 配置相同组的消费者会对消息进行轮询消费\nspring.cloud.stream.bindings.msg1.group=group1\n```","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}