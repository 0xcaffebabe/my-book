{"content":"# 安全\n\n## 验证与授权\n\n- 验证：用来确定你是谁\n- 授权：确定你能做什么\n\n### 单点登录SSO\n\n单点登录是指当主题视图访问某一资源时，会被重定向到一个身份提供者，这个提供者负责鉴别主体，鉴别完成之后将通知服务提供者采取相应操作\n\n#### 单点登录网关\n\n使用一个统一的网关来鉴别主体，有效地减少重复编码。\n\n但是需要解决的一个问题是，随着服务间的调用，如何在服务间传递这个身份信息？\n\n使用HTTP头携带是个不错的办法\n\n**深度防御**\n\n把所有鸡蛋放在一个篮子里是不安全的，深度防御的理念是对系统中的每一层做防御，以避免单点故障带来的严重后果\n\n### 细粒度的授权\n\n当授权角色细分达到一定的粒度时，对系统的管理维护来说是很复杂的。\n\n整体来说，权限的粒度划分应该要以组织的结构为依据\n\n## 服务间的验证与授权\n\n- 边界内信任\n\n就如局域网内的通信，在边界内的服务通信，通常都被默认为安全的\n\n- HTTP(S)身份认证\n\n使用HTTP是不安全的，但是如果使用HTTPS则需要考虑证书的管理问题以及HTTPS无法被缓存等\n\n- 证书\n- 哈希\n- API密钥\n  - 通过服务端管理密钥来识别服务调用者以及对调用者进行管理\n\n## 静态数据的安全\n\n- **选择一个众所周知的加密算法，而非自己实现**\n- 加密算法应取决于密钥的复杂性，而非算法的保密性\n- 选择应该加密的数据\n- 按需解密\n- 密钥管理\n\n## 深度防御\n\n- 防火墙\n\n不同的范围使用不同的防火墙\n\n- 日志\n\n日志虽然无法预防，但是可以事后检测发生了什么\n\n- IDS\n\nIDS通常是在可信范围内尽力查找可疑目标\n\n- 网络隔离\n\n微服务可以利用分布部署的优点来进行网络隔离\n\n- 操作系统\n\n操作系统的漏洞仍然不可小视\n\n## 保持节俭\n\n真的需要存储那么多数据吗？\n\n为了安全，或者为了用户的隐私，只需要存取必须的数据即可\n\n## 内建安全\n\n可以将一些自动化的安全工具集成的CI中\n\n## 外部验证\n\n外包出去给第三方进行渗透测试\n\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}