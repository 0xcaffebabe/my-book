{"content":"# 服务建模\n\n## 设计方法\n\n- 根据业务能力划分\n- 根据用例划分\n- 根据技术能力划分\n\n![批注 2020-06-18 162701](/assets/批注%202020-06-18%20162701.png)\n\n## 好服务的标准\n\n### 松耦合\n\n- 尽可能少地知道外部服务的信息\n\n### 高内聚\n\n- 相关的行为聚集咋一起\n\n## bounded context\n\n![202002091623](/assets/202002091623.jpeg)\n\n- 这里的product就是**共享模型**\n\n### 模块与边界\n\n模块的边界是绝佳的微服务候选者，但是新系统最好是先使用单体系统，过于早的边界划分，如果错了，代价会很大\n\n## 业务功能\n\n进行建模时，如果只考虑模型而不考虑具体业务功能，则就导致大量贫血的基于CRUD操作的服务\n\n但是需要大量的业务知识\n根据业务能力进行拆分的话，适合在初期，到了后期，随着系统体量增长，需要进一步拆分\n\n## 逐步划分\n\n一开始划分的是一些粗粒度的边界，接下来再对这些粗粒度边界继续划分成较细粒度的边界\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}