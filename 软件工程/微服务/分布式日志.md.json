{"content":"# 分布式日志\n\n## 传统日志收集\n\n传统项目中，如果在生产环境中，有多台不同的服务器集群，如果生产环境需要通过日志定位项目的Bug的话，需要在每台节点上使用传统的命令方式查询，这样效率非常底下\n\n## ELK\n\n- elasticsearch\n- logstash\n- kibana\n\n1、每台服务器集群节点安装Logstash日志收集系统插件\n2、每台服务器节点将日志输入到Logstash中\n3、Logstash将该日志格式化为json格式，根据每天创建不同的索引，输出到ElasticSearch中\n4、浏览器使用安装Kibana查询日志信息\n\n### logstash配置\n\n\n- logstash配置\n\n```conf\ninput {\n    # 从文件读取日志信息 输送到控制台\n    file {\n        path => \"/home/my/elasticsearch-6.4.3/logs/elasticsearch.log\"\n        codec => \"json\" ## 以JSON格式读取日志\n        type => \"elasticsearch\"\n        start_position => \"beginning\"\n    }\n}\n\n# filter {\n#\n# }\n\noutput {\n    # 标准输出 \n    # stdout {}\n    # 输出进行格式化，采用Ruby库来解析日志   \n     stdout { codec => rubydebug }\n\t elasticsearch {\n        hosts => [\"127.0.0.1:9200\"]\n        index => \"es-%{+YYYY.MM.dd}\"\n    }\t \n}\n```\n\n- 启动es\n- 启动logstash`./logstash -f log.conf`\n- 启动kibana\n\n\n### 问题\n\n- 每台机器就需要有一台logstash\n- 非实时\n\n### 使用ELK+Kafka\n\n![202045134422](/assets/202045134422.png)\n\n1.那些日志信息需要输入logstash （error级别）\n2.AOP 异常通知  服务与服务之间如何区分日志索引文件（服务名称）\n3.在分布式日志收集中，相同的服务集群的话是不需要区分日志索引文件。\n4.目的为了 统一管理相同节点日志我信息。\n5.相同的服务集群的话，是是不需要区分日志索引文件 搜索日志的时候，如何定位服务器节点信息呢？\n\n## 同步数据库\n\n```conf\ninput {\n  jdbc {\n    jdbc_driver_library => \"/home/my/mysql-connector-java-5.1.46.jar\"\n    jdbc_driver_class => \"com.mysql.jdbc.Driver\"\n    jdbc_connection_string => \"jdbc:mysql://192.168.123.1:3306/shopa_member\"\n    jdbc_user => \"root\"\n    jdbc_password => \"123\"\n    schedule => \"* * * * *\"\n    statement => \"SELECT * FROM tb_user WHERE update_time >= :sql_last_value\"\n    use_column_value => true\n    tracking_column_type => \"timestamp\"\n    tracking_column => \"update_time\"\n    last_run_metadata_path => \"syncpoint_table\"\n  }\n}\n\n\noutput {\n    elasticsearch {\n        # ES的IP地址及端口\n        hosts => [\"127.0.0.1:9200\"]\n        # 索引名称 可自定义\n        index => \"user\"\n        # 需要关联的数据库中有有一个id字段，对应类型中的id\n        document_id => \"%{USER_ID}\"\n        document_type => \"user\"\n    }\n    stdout {\n        # JSON格式输出\n        codec => json_lines\n    }\n}\n\n```","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}