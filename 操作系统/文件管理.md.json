{"content":"# 文件管理\n\n长期存储信息的三个基本要求\n\n- 能够存储大量信息\n- 使用信息的进程终止时，信息仍旧存在\n- 信息能够并发访问\n\n## 文件\n\n### 文件命名\n\n_FAT-16_ _NTFS_\n\n### 文件结构\n\n- 字节序列\n- 记录序列\n- 树\n\n![](https://img-blog.csdn.net/20180426093252605?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODk3NTI1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n### 文件类型\n\n- 普通文件\n- 目录\n\n![](https://img-blog.csdn.net/20180426095725505?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4ODk3NTI1/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70)\n\n### 文件访问\n\n- 顺序访问\n- 随机访问\n\n### 文件属性\n\n![2020731154745](/assets/2020731154745.jpg)\n\n文件属性        | 意义\n----------- | ---------------\n保护          | 谁能访问该文件，以何种方式访问\n密码          | 访问该文件需要的密码\n创立者         | 创立该文件的用户的ID\n拥有者         | 文件当前的拥有者\n只读标志        | 0读写访问;1只读.\n隐藏标志        | 0正常文件; 1隐藏文件\n系统标志        | 0正常文件; 1系统文件\n归档标志        | 0已经备份; 1需要备份\nASCIIV二进制标志 | 0文本文件; 1二进制文件\n随机访问标志      | 0顺序访问; 1随机访问\n临时文件标志      | 0正常文件; 1临时文件\n锁标志         | 0释放状态;非零锁住状态\n记录长度        | 一个记录包含的字节数\n关键字位置       | 记录里关键字所处的位移量\n关键字长度       | 关键字所占字节数\n文件创立时间      | 文件创立的日期和时间\n最后访向时间      | 文件最后被访问的日期和时间\n最后修改时间      | 文件最后修改的日期和时间\n当前文件大小      | 文件所占的字节数\n文件最大尺寸      | 文件可达到的最大字节数\n\n### 文件操作\n\n- onCreate\n- delete\n- open\n- close\n- read\n- write\n- append\n- seek\n- get attrs\n- set attrs\n- rename\n\n### 使用文件系统调用\n\n一个简单的C语言程序：\n\n```c\nint main(){\n\n        FILE *fp;\n        char c = -1;\n        fp = fopen(\"./file.c\",\"r\");\n        while ((c = fgetc(fp)) != -1){\n                putchar(c);\n        }\n        fclose(fp);\n\n        return 0;\n}\n```\n\n## 目录\n\n- 一级目录系统\n\n![批注 2020-07-31 155012](/assets/批注%202020-07-31%20155012.png)\n\n- 层次目录系统\n\n![批注 2020-07-31 155041](/assets/批注%202020-07-31%20155041.png)\n\n- 路径名\n\n  - 绝对路径\n  - 相对路径\n\n- 目录操作\n\n  - create\n  - delete\n  - opendir\n  - closedir\n  - readdir\n  - rename\n  - link\n  - unlink\n\n## 文件系统的实现\n\n### 文件系统布局\n\n**主引导记录（MBR）**\n\n![enter image description here](https://pic3.zhimg.com/80/v2-76dc2f67640adbbc3a34cdd72c02180a_hd.jpg)\n\n### 文件的实现\n\n- 连续分配\n\n![批注 2020-07-31 154858](/assets/批注%202020-07-31%20154858.png)\n\n- 链表分配\n\n![批注 2020-07-31 154922](/assets/批注%202020-07-31%20154922.png)\n\n- 使用内存中的表进行链表分配\n\n**文件分配表**\n\n- i节点\n\n### 目录的实现\n\n### 共享文件\n\n**链接** **符号链接**\n\n### 日志结构文件系统（LFS）\n\n### 日志文件系统\n\n日志必须是幂等的 _思考： 与数据库中的原子事务_\n\n### 虚拟文件系统\n\n_思考： 适配器设计模式_\n\n## 文件系统管理和优化\n\n- 磁盘空间管理\n\n  - 选择块大小\n\n    速度与空间不可兼得\n\n  - 记录空闲块\n\n    链表与位图\n\n  - 磁盘配额\n\n- 文件系统备份\n\n**逻辑转储与物理转储**\n\n- 文件系统的一致性\n\n检查使用的块与空闲块是否一致\n\n- 文件系统性能\n\n  - 高速缓存\n\n    内存速度 > 磁盘速度\n\n    **块高速缓存** _散列与快速查找_\n\n  - 块提前读\n\n  - 减少磁盘臂运动\n\n- 磁盘碎片整理\n\n## 文件系统实例\n\n- MS-DOS文件系统\n- UNIX V7 文件系统\n- CD-ROM文件系统\n\n  - ISO 9660文件系统\n  - Rock Ridge扩展\n  - Joliet扩展\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}