{"content":"# 正则表达式\n\n正则表通常被用来检索、替换那些符合某个模式（规则）的文本\n\n## 组成\n\n### 边界符\n\n| 边界符 | 说明                           |\n| ------ | ------------------------------ |\n| ^      | 表示匹配行首的文本（以谁开始） |\n| $      | 表示匹配行尾的文本（以谁结束） |\n( ) | 标记一个子表达式的开始和结束位置\n\n1、 ()\n\n```js\n/([1-9])([a-z])/g\n```\n\n匹配 `1a2b` -> 1a 2b\n\n圆括号会有一个副作用，使相关的匹配会被缓存,此时可用 ?: 放在第一个选项前来消除这种副作用\n\n- exp1(?=exp2)：查找 exp2 前面的 exp1\n- (?<=exp2)exp1：查找 exp2 后面的 exp1\n- exp1(?!exp2)：查找后面不是 exp2 的 exp1\n- (?<!exp2)exp1：查找前面不是 exp2 的 exp1\n\n### 字符类\n\n#### []方括号\n\n一系列字符可供选择，只要匹配其中一个就可以了\n\n- [ABC] 被匹配字符串中所有的 A B C 字母\n- [^ABC] 除了A B C 字母的其他字符\n- [A-Z] 表示一个区间，匹配所有大写字母，[a-z] 表示所有小写字母\n\n#### 量词符\n\n| 量词  | 说明            |\n| ----- | --------------- |\n| *     | 重复0次或更多次, 要匹配 * 字符，使用 \\* |\n| +     | 重复1次或更多次, 要匹配 + 字符，使用 \\+ |\n| ?     | 重复0次或1次, 要匹配 ? 字符，使用 \\?    |\n| {n}   | 重复n次         |\n| {n,}  | 重复n次或更多次 |\n| {n,m} | 重复n到m次      |\n\n#### 特殊字符\n\n特殊字符 | 说明\n---- | --\n`    | `  | 指明两项之间的一个选择\n\n#### 修饰符\n\n- i ignore - 不区分大小写\n- g global - 全局匹配\n- m multi line - 多行匹配，使边界字符 ^ 和 $ 匹配每一行的开头和结尾\n- s 特殊字符圆点 . 中包含换行符 \\n\n\n### 预定义类\n\n预定类 | 说明\n--- | ---------------------------------------\n\\cx | 匹配由x指明的控制字符。例如， \\cM 匹配一个 Control-M 或回车符\n\\f  | 匹配一个换页符\n\\n  | 换行符\n\\r  | 回车符\n\\t  | 匹配一个制表符\n\\v  | 匹配一个垂直制表符\n\\d  | 匹配0-9之间的任一数字, 相当于[0-9]\n\\D  | 匹配所有0-9以外的字符，相当于[^0-9]\n\\w  | 匹配任意的字母、数字和下划线,相当于[A-Za-z0-9_ ]\n\\W  | 除所有字母、数字和下划线以外的字符，相当于[^A-Za-z0-9_ ]\n\\s  | 匹配空格(包括换行符、制表符、空格符等)，相等 于[ \\tlr\\n\\v\\f]\n\\S  | 匹配非空格的字符，相当于[^ \\tlr\\n\\v\\f]\n\\b | 匹配一个单词边界，即字与空格间的位置\n\\B | 非单词边界匹配\n\n## 运算符的优先级\n\n从高到低：\n\n- \\\n- `(), (?:), (?=), []`\n- ^, $, \\任何元字符、任何字符\n- |\n","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}