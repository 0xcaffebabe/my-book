{"content":"# webpack\n\nwebpack提供了模块化支持，代码压缩混淆，解决js兼容问题，性能优化等特性，提高了开发效率和项目的可维护性\n\n![2020322114140](/assets/2020322114140.jpg)\n\n## 全局安装\n\n```shell\nnpm install webpack -g \nnpm install webpack-cli -g \n```\n\n## 使用\n\n- 编写代码\n\n```js\nimport $ from 'jquery'\n\n$(function(){\n    $('li:odd').css('backgroundColor','pink');\n    $('li:even').css('backgroundColor','lightblue');\n})\n```\n\n- 编写webpack.config.js\n\n```js\nmodule.exports = {\n    mode:\"development\"//可以设置为development(开发模式)，production(发布模式)\n}\n```\n\n- package.json增加一个脚本\n\n```json\n\"scripts\": {\n    \"dev\":\"webpack\"\n  }\n```\n\n- 执行`npm run dev`\n\n### 自定义打包入口与出口\n\n```js\nconst path = require(\"path\");\nmodule.exports = {\n    mode:\"development\",\n    //设置入口文件路径\n    entry: path.join(__dirname,\"./src/xx.js\"),\n    //设置出口文件\n    output:{\n        //设置路径\n        path:path.join(__dirname,\"./dist\"),\n        //设置文件名\n        filename:\"res.js\"\n    }\n}\n```\n\n## 使用webpack-dev-server\n\n- 安装\n\n```shell\nnpm install webpack webpack-dev-server html-webpack-plugin --save-dev\n```\n\n- package.json\n\n```json\n{\n  ...\n  \"scripts\": {\n    \"dev\":\"webpack-dev-server --inline --hot --open --port 5008\"\n  }\n}\n\n```\n\n- 配置webpack.config.js\n\n```js\n//引用html-webpack-plugin插件，作用是根据html模板在内存生成html文件，它的工作原理是根据模板文件在内存中生成一个index.html文件。\nvar htmlwp = require('html-webpack-plugin');\nmodule.exports={\n    entry:'./src/main.js',  //指定打包的入口文件\n    output:{\n        path : __dirname+'/dist',  // 注意：__dirname表示webpack.config.js所在目录的绝对路径\n        filename:'build.js'\t\t   //输出文件\n    },\n    devtool: 'eval-source-map',\n    plugins:[\n        new htmlwp({\n            title: '首页',  //生成的页面标题<head><title>首页</title></head>\n            filename: 'index.html', //webpack-dev-server在内存中生成的文件名称，自动将build注入到这个页面底部，才能实现自动刷新功能\n            template: 'vue_02.html' //根据vue_02.html这个模板来生成(这个文件请程序员自己生成)\n        })\n    ]\n}\n```\n\n- 运行\n\n```shell\nnpm run dev\n```\n\n## loader\n\n通过loader打包非js模块：默认情况下，webpack只能打包js文件，如果想要打包非js文件，需要调用loader加载器才能打包\n\n### css loader\n\n```js\n{\n  ...\n   module : {\n        rules:[\n            {\n                //test设置需要匹配的文件类型，支持正则\n                test:/\\.css$/,\n                //use表示该文件类型需要调用的loader\n                use:['style-loader','css-loader']\n            }\n        ]\n    }\n}\n```\n\n- 可以直接在js中引入css\n\n```js\nimport './style.less'\n```\n\n### babel loader\n\n将高级js语法转为低级语法\n\n- 安装\n\n```js\nnpm install babel-loader @babel/core @babel/runtime -D\nnpm install @babel/preset-env @babel/plugin-transform-runtime @babel/plugin-proposal-class-properties -D\n```\n\n- babel.config.js\n\n```js\nmodule.exports = {\n    presets:[\"@babel/preset-env\"],\n    plugins:[ \"@babel/plugin-transform-runtime\", \"@babel/plugin-proposal-class-properties\" ]\n}\n```\n\n- 添加\n\n```js\n{\n    test:/\\.js$/,\n    use:\"babel-loader\",\n    //exclude为排除项，意思是不要处理node_modules中的js文件\n    exclude:/node_modules/\n}\n```\n\n## 调试\n\n```js\nvar add = function (x, y) {\n    debugger\n    return x+y+1;\n}\n```\n\n## 打包发布\n\n```json\n\"build\":\"webpack -p\"\n```","commitList":[{"date":"2021-10-08T12:45:10+08:00","author":"cjiping","message":"doc开发期 构建期调整","hash":"704efe7455b7fb2fbd81ec60099191ff982e639a"},{"date":"2021-10-07T19:38:58+08:00","author":"My","message":"init","hash":"4e0456332231ba0523aa526415f9982377358870"}],"hasMoreCommit":false,"totalCommits":0}